- name: Create the traefik directory
  file:
    path: "/etc/traefik"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Copy traefik.yaml file
  template:
    src: "traefik.yml.j2"
    dest: "/etc/traefik/traefik.yml"

- name: Deploy docker compopse stack
  docker_compose:
    project_name: trophoria-stack
    definition:
      version: '3'
      services:
        traefik:
          image: "traefik:latest"
          container_name: "traefik"
          restart: unless-stopped
          ports:
            - "80:80"
            - "443:443"
          networks:
            - server_network
          volumes:
            - /etc/traefik:/etc/traefik
            - traefik-ssl-certs:/ssl-certs
            - /var/run/docker.sock:/var/run/docker.sock:ro

        watchtower:
          image: "containrrr/watchtower"
          container_name: "watchtower"
          restart: unless-stopped
          command: --schedule "* */15 * * * *"
          volumes:
            - /var/run/docker.sock:/var/run/docker.sock

        postgres:
          image: "postgres:alpine"
          container_name: "postgres"
          restart: unless-stopped
          environment:
            "POSTGRES_USER": "{{ postgres_user }}"
            "POSTGRES_PASSWORD": "{{ postgres_password }}"
            "POSTGRES_DB": "{{ postgres_db }}"
          networks:
            - server_network
          volumes:
            - "{{ docker_dir }}/postgres:/etc/postgres"

        postgres_test:
          image: "postgres:alpine"
          container_name: "postgres_test"
          restart: unless-stopped
          environment:
            "POSTGRES_USER": "{{ postgres_test_user }}"
            "POSTGRES_PASSWORD": "{{ postgres_test_password }}"
            "POSTGRES_DB": "{{ postgres_test_db }}"
          ports:
            - "5432:5432"

        redis:
          image: "trophoria/trophoria-cache:latest"
          container_name: "redis"
          restart: unless-stopped
          privileged: true
          command: sh init-redis.sh {{ redis_password }}
          networks:
            - server_network
          volumes:
            - "{{ docker_dir }}/redis:/etc/redis"

        trophoria:
          image: "trophoria/trophoria-api:latest"
          container_name: "trophoria"
          restart: unless-stopped
          environment:
            "DATABASE_URL": "{{ database_url }}"
            "REDIS_PASSWORD": "{{ redis_password }}"
            "REDIS_PORT": "{{ redis_port }}"
            "REDIS_TTL": "{{ redis_ttl }}"
            "REDIS_HOST": "{{ redis_host }}"
            "PORT": "{{ api_port }} "
          labels:
            traefik.enable: true
            traefik.http.routers.trophoria.entrypoints: web, websecure
            traefik.http.routers.trophoria.rule: Host("{{ root_host }}")
            traefik.http.routers.trophoria.tls: true
            traefik.http.routers.trophoria.tls.certresolver: zerossl
          networks:
            - server_network
          depends_on:
              - redis
              - postgres

      volumes:
        traefik-ssl-certs:
          driver: local

      networks:
        server_network:
          driver: bridge
